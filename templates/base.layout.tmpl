{{define "base"}}
<!doctype html>

<html lang="en">

	<head>
		<!--Required meta tags-->
		<meta charset="utf-8">
    		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

		<title>My page</title>

		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker.min.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
		<link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
		<link rel="stylesheet" type="text/css" href="/static/css/styles.css">	
		
	</head>	

	<body>


		<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
		  <a class="navbar-brand" href="#">Navbar</a>
		  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		  </button>

		  <div class="collapse navbar-collapse" id="navbarSupportedContent">
			<ul class="navbar-nav mr-auto">
			  <li class="nav-item active">
				<a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
			  </li>
			  <li class="nav-item">
				<a class="nav-link" href="/about">About</a>
			  </li>
			  <li class="nav-item dropdown">
				<a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				  Rooms
				</a>
				<div class="dropdown-menu" aria-labelledby="navbarDropdown">
				  <a class="dropdown-item" href="/generals-quarters">General's Quarters</a>
				  <a class="dropdown-item" href="/majors-suite">Major's Suite</a>
				</div>
			  </li>
			  <li class="nav-item">
				<a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Book Now</a>
			  </li>
			  <li class="nav-item">
				<a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
			  </li>
			</ul>
			  </div>
		</nav>

    {{block "content" .}}

    {{end}}

    <div class="row my-footer">
        <div class="col">
            Left
        </div>
        
        <div class="col">
            Middle
        </div>
        
        <div class="col">
            Right
        </div>
    </div>
    
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
<script src="https://unpkg.com/notie"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

{{block "js" .}}

{{end}}

<script>

    let attention = Prompt();

    (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
                }, false)
            })
    })()


    function notify(msg, msgType) {
        notie.alert({
            type: msgType,
            text: msg,
        })
    }

    function notifyModal(title, text, icon, confirmButtonText) {
        Swal.fire({
            title: title,
            text: text,
            icon: icon,
            confirmButtonText: confirmButtonText
        })
    }

    {{with .Error}}
    notify("{{.}}", "error")
    {{end}}

    {{with .Flash}}
    notify("{{.}}", "success")
    {{end}}

    {{with .Warning}}
    notify("{{.}}", "warning")
    {{end}}


    function Prompt() {
        let toast = function(c) {
            const {
                msg = "",
                icon = "success",
                position = "top-end",
            } = c;

            const Toast = Swal.mixin({
                toast: true,
                title: msg,
                position: position,
                icon: icon,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer;
                    toast.onmouseleave = Swal.resumeTimer;
                }
            });

            Toast.fire({});
        }

        let success = function(c) {
            const {
                msg = "",
                title = "",
                footer = "",
            } = c;

            Swal.fire({
                icon: "success",
                title: title,
                text: msg,
                footer: footer
            });
        }

        let error = function(c) {
            const {
                msg = "",
                title = "",
                footer = "",
            } = c;

            Swal.fire({
                icon: "error",
                title: title,
                text: msg,
                footer: footer
            });
        }

        async function custom(c) {
            const {
                icon = "",
                msg = "",
                title = "",
                showConfirmButton = true,
            } = c;

            const { value: result } = await Swal.fire({
                icon: icon,
                title: title,
                html: msg,
                backdrop: false,
                focusConfirm: false,
                showCancelButton: true,
                showConfirmButton: showConfirmButton,
                willOpen: () => {
                    if (c.willOpen !== undefined) {
                        c.willOpen();
                    }
                },
                preConfirm: () => {
                    return [
                    document.getElementById("start").value,
                    document.getElementById("end").value
                    ];
                },
                didOpen: () => {
                    if (c.didOpen !== undefined) {
                        c.didOpen();
                    }
                }
            });

            if (result) {
                if (result.dismiss !== Swal.DismissReason.cancel) {
                    if (result.value !== "") {
                        if (c.callback !== undefined) {
                            c.callback(result);
                        }
                    } else {
                        c.callback(false);
                    }
                } else {
                    c.callback(false);
                }
            }
        }

        return {
            toast: toast,
            success: success,
            error: error,
            custom: custom,
        }
    }

</script>

</body>


</html>
{{end}}